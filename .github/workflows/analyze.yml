name: CI/CD - Tests and Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run all unit tests
      run: |
        python scripts/run_all_tests.py
    
    - name: Run pytest tests (if any)
      run: |
        pytest scripts/ -v --tb=short || echo "No pytest tests found"
      continue-on-error: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache/
          results/
        retention-days: 7
  
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 scripts/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length set to 120.
        flake8 scripts/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
  
  analysis:
    name: Scientific Analysis (with data)
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install jupyter nbconvert
    
    - name: Download test data
      run: python scripts/descargar_datos.py
      continue-on-error: true
    
    - name: Run validation pipeline
      run: |
        python scripts/pipeline_validacion.py
      continue-on-error: true
    
    - name: Execute validation notebook
      run: jupyter nbconvert --to html --execute notebooks/validation_quick.ipynb --ExecutePreprocessor.timeout=1800
      continue-on-error: true
    
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: analysis-results
        path: |
          results/
          *.png
          *.jpg
          *.pdf
          notebooks/*.html
        retention-days: 30